name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: f1db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            backend/node_modules
            backend/.npm
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Generate Prisma client
        working-directory: ./backend
        run: npx prisma generate

      - name: Run backend tests
        working-directory: ./backend
        run: npm test

      - name: Build backend
        working-directory: ./backend
        run: npm run build

  frontend:
    name: Frontend Tests
    needs: backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/f1-frontend/node_modules
            frontend/f1-frontend/.npm
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/f1-frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        working-directory: ./frontend/f1-frontend
        run: npm ci

      - name: Lint frontend
        working-directory: ./frontend/f1-frontend
        run: npm run lint

      - name: Run frontend tests
        working-directory: ./frontend/f1-frontend
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Build frontend
        working-directory: ./frontend/f1-frontend
        run: npm run build -- --configuration production